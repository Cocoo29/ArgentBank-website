{"ast":null,"code":"import axios from'axios';import{USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT,USER_PROFILE_SUCCESS,USER_PROFILE_FAIL,USER_PROFILE_RESET,USER_PROFILE_UPDATE,USER_PROFILE_UPDATE_FAIL}from'../constants/actions';import{API_BASE_URL}from'../constants/url';const baseUrl=API_BASE_URL;// Action de connexion\nexport const login=(email,password)=>async dispatch=>{try{const config={headers:{'Content-type':'application/json'}};const{data}=await axios.post(\"\".concat(baseUrl,\"user/login\"),{email,password},config);dispatch(loginSuccess(data));dispatch(userProfile(data.body.token));}catch(error){console.log('Error in login:',error);dispatch({type:USER_LOGIN_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};// Action de succès de connexion\nexport const loginSuccess=data=>({type:USER_LOGIN_SUCCESS,payload:data});// Action de déconnexion\nexport const logout=navigate=>async dispatch=>{try{dispatch(userLogout());dispatch(userProfileReset());// Redirection vers la page de login après déconnexion\nnavigate('/loginForm');}catch(error){console.error('Error in logout:',error);}};// Action de déconnexion de l'utilisateur\nexport const userLogout=()=>({type:USER_LOGOUT});// Action de réinitialisation du profil utilisateur\nexport const userProfileReset=()=>({type:USER_PROFILE_RESET});// Action de profil utilisateur réussie\nexport const userProfile=token=>async dispatch=>{try{const{data}=await axios.post(\"\".concat(baseUrl,\"user/profile\"),{token},getConfig(token));dispatch({type:USER_PROFILE_SUCCESS,payload:data});}catch(error){dispatch(handleError(USER_PROFILE_FAIL,error));}};// Action de mise à jour du profil utilisateur\nexport const updateProfile=(token,newFirstName,newLastName)=>async dispatch=>{try{const{data}=await axios.put(\"\".concat(baseUrl,\"user/profile\"),{firstName:newFirstName,lastName:newLastName},getConfig(token));dispatch(userProfileUpdate(data));}catch(error){dispatch(handleError(USER_PROFILE_UPDATE_FAIL,error));}};// Action de mise à jour du profil utilisateur réussie\nexport const userProfileUpdate=data=>({type:USER_PROFILE_UPDATE,payload:data});// Fonction pour gérer les erreurs\nconst handleError=(type,error)=>({type,payload:error.response&&error.response.data.message?error.response.data.message:error.message});// Fonction pour obtenir la configuration avec le token d'authentification\nconst getConfig=token=>({headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}});","map":{"version":3,"names":["axios","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_PROFILE_UPDATE","USER_PROFILE_UPDATE_FAIL","API_BASE_URL","baseUrl","login","email","password","dispatch","config","headers","data","post","concat","loginSuccess","userProfile","body","token","error","console","log","type","payload","response","message","logout","navigate","userLogout","userProfileReset","getConfig","handleError","updateProfile","newFirstName","newLastName","put","firstName","lastName","userProfileUpdate","Authorization"],"sources":["/home/utilisateur/Bureau/ArgentBank-website/front-end/src/actions/actions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n  USER_PROFILE_UPDATE,\n  USER_PROFILE_UPDATE_FAIL,\n} from '../constants/actions';\nimport { API_BASE_URL } from '../constants/url';\n\nconst baseUrl = API_BASE_URL;\n\n// Action de connexion\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${baseUrl}user/login`,\n      { email, password },\n      config\n    );\n\n    dispatch(loginSuccess(data));\n    dispatch(userProfile(data.body.token));\n  } catch (error) {\n    console.log('Error in login:', error);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action de succès de connexion\nexport const loginSuccess = (data) => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data,\n});\n\n// Action de déconnexion\nexport const logout = (navigate) => async (dispatch) => {\n  try {\n    dispatch(userLogout());\n    dispatch(userProfileReset());\n    \n    // Redirection vers la page de login après déconnexion\n    navigate('/loginForm');\n  } catch (error) {\n    console.error('Error in logout:', error);\n  }\n};\n\n// Action de déconnexion de l'utilisateur\nexport const userLogout = () => ({ type: USER_LOGOUT });\n\n// Action de réinitialisation du profil utilisateur\nexport const userProfileReset = () => ({ type: USER_PROFILE_RESET });\n\n// Action de profil utilisateur réussie\nexport const userProfile = (token) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\n      `${baseUrl}user/profile`,\n      { token },\n      getConfig(token)\n    );\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_FAIL, error));\n  }\n};\n\n// Action de mise à jour du profil utilisateur\nexport const updateProfile = (token, newFirstName, newLastName) => async (\n  dispatch\n) => {\n  try {\n    const { data } = await axios.put(\n      `${baseUrl}user/profile`,\n      { firstName: newFirstName, lastName: newLastName },\n      getConfig(token)\n    );\n    dispatch(userProfileUpdate(data));\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_UPDATE_FAIL, error));\n  }\n};\n\n// Action de mise à jour du profil utilisateur réussie\nexport const userProfileUpdate = (data) => ({\n  type: USER_PROFILE_UPDATE,\n  payload: data,\n});\n\n// Fonction pour gérer les erreurs\nconst handleError = (type, error) => ({\n  type,\n  payload:\n    error.response && error.response.data.message\n      ? error.response.data.message\n      : error.message,\n});\n\n// Fonction pour obtenir la configuration avec le token d'authentification\nconst getConfig = (token) => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}