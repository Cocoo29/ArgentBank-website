{"ast":null,"code":"// loginReducer\nimport{USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT}from'../constants/actions';// UserReducer\nimport{USER_PROFILE_SUCCESS,USER_PROFILE_FAIL,USER_PROFILE_RESET,USER_PROFILE_UPDATE,USER_PROFILE_UPDATE_FAIL}from'../constants/actions';import{API_BASE_URL}from'../constants/url';import axios from'axios';const baseUrl=API_BASE_URL;// Login action\nexport const login=(email,password)=>async dispatch=>{try{const config={headers:{'Content-type':'application/json'}};const{data}=await axios.post(\"\".concat(baseUrl,\"user/login\"),{email,password},config);dispatch(loginSuccess(data));dispatch(userProfile(data.body.token));}catch(error){dispatch({type:USER_LOGIN_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};// login success\nexport const loginSuccess=data=>({type:USER_LOGIN_SUCCESS,payload:data});// Logout action\nexport const logout=()=>async dispatch=>{dispatch(userLogout());dispatch(userProfileReset());};// User logout\nexport const userLogout=()=>({type:USER_LOGOUT});// User profile reset\nexport const userProfileReset=()=>({type:USER_PROFILE_RESET});// User's profile action\nexport const userProfile=token=>async dispatch=>{try{const{data}=await axios.post(\"\".concat(baseUrl,\"user/profile\"),{token},getConfig(token));dispatch({type:USER_PROFILE_SUCCESS,payload:data});}catch(error){dispatch(handleError(USER_PROFILE_FAIL,error));}};// User's update profile\nexport const updateProfile=(token,newFirstName,newLastName)=>async dispatch=>{try{const{data}=await axios.put(\"\".concat(baseUrl,\"user/profile\"),{firstName:newFirstName,lastName:newLastName},getConfig(token));dispatch(userProfileUpdate(data));}catch(error){dispatch(handleError(USER_PROFILE_UPDATE_FAIL,error));}};// User profile update\nexport const userProfileUpdate=data=>({type:USER_PROFILE_UPDATE,payload:data});const handleError=(type,error)=>({type,payload:error.response&&error.response.data.message?error.response.data.message:error.message});const getConfig=token=>({headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}});","map":{"version":3,"names":["USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_PROFILE_UPDATE","USER_PROFILE_UPDATE_FAIL","API_BASE_URL","axios","baseUrl","login","email","password","dispatch","config","headers","data","post","concat","loginSuccess","userProfile","body","token","error","type","payload","response","message","logout","userLogout","userProfileReset","getConfig","handleError","updateProfile","newFirstName","newLastName","put","firstName","lastName","userProfileUpdate","Authorization"],"sources":["/home/utilisateur/Bureau/ArgentBank-website/front-end/src/actions/actions.js"],"sourcesContent":["// loginReducer\n\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n} from '../constants/actions'\n\n// UserReducer\n\nimport {\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n  USER_PROFILE_UPDATE,\n  USER_PROFILE_UPDATE_FAIL,\n} from '../constants/actions'\n\nimport {\n  API_BASE_URL,\n} from '../constants/url';\n\nimport axios from 'axios'\n\nconst baseUrl = API_BASE_URL;\n\n// Login action\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      `${baseUrl}user/login`,\n      { email, password },\n      config\n    )\n\n    dispatch(loginSuccess(data))\n    dispatch(userProfile(data.body.token))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// login success\nexport const loginSuccess = (data) => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data\n})\n\n// Logout action\n\nexport const logout = () => async (dispatch) => {\n  dispatch(userLogout())\n  dispatch(userProfileReset())\n}\n\n// User logout\nexport const userLogout = () => ({ type: USER_LOGOUT })\n\n// User profile reset\nexport const userProfileReset = () => ({ type: USER_PROFILE_RESET })\n\n\n// User's profile action\n\nexport const userProfile = (token) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(`${baseUrl}user/profile`, { token }, getConfig(token));\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_FAIL, error));\n  }\n};\n\n// User's update profile\n\nexport const updateProfile = (token, newFirstName, newLastName) => async (dispatch) => {\n  try {\n    const { data } = await axios.put(`${baseUrl}user/profile`, { firstName: newFirstName, lastName: newLastName }, getConfig(token));\n    dispatch(userProfileUpdate(data));\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_UPDATE_FAIL, error));\n  }\n};\n\n// User profile update\nexport const userProfileUpdate = (data) => ({\n  type: USER_PROFILE_UPDATE,\n  payload: data\n})\n\nconst handleError = (type, error) => ({\n  type,\n  payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n});\n\nconst getConfig = (token) => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}