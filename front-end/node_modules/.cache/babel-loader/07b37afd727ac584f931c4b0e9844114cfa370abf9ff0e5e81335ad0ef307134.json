{"ast":null,"code":"// actions/actions.js\n\nimport axios from 'axios';\nimport { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_PROFILE_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_RESET } from '../constants/actions';\nimport { API_BASE_URL } from '../constants/url';\nimport { useHistory } from 'react-router-dom'; // Importer useHistory depuis react-router-dom\n\nconst baseUrl = API_BASE_URL;\n\n// Action de connexion\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${baseUrl}user/login`, {\n      email,\n      password\n    }, config);\n    dispatch(loginSuccess(data));\n    dispatch(userProfile(data.body.token));\n  } catch (error) {\n    console.log('Error in login:', error);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Action de succès de connexion\nexport const loginSuccess = data => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data\n});\n\n// Action de déconnexion\nexport const logout = () => async dispatch => {\n  dispatch(userLogout());\n  dispatch(userProfileReset());\n};\n\n// Action de déconnexion de l'utilisateur\nexport const userLogout = () => ({\n  type: USER_LOGOUT\n});\n\n// Action de réinitialisation du profil utilisateur\nexport const userProfileReset = () => ({\n  type: USER_PROFILE_RESET\n});\n\n// Action de profil utilisateur réussie\nexport const userProfile = token => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(`${baseUrl}user/profile`, {\n      token\n    }, getConfig(token));\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Fonction pour obtenir la configuration avec le token d'authentification\nconst getConfig = token => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`\n  }\n});","map":{"version":3,"names":["axios","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","API_BASE_URL","useHistory","baseUrl","login","email","password","dispatch","config","headers","data","post","loginSuccess","userProfile","body","token","error","console","log","type","payload","response","message","logout","userLogout","userProfileReset","getConfig","Authorization"],"sources":["/home/utilisateur/Bureau/ArgentBank-website/front-end/src/actions/actions.js"],"sourcesContent":["// actions/actions.js\n\nimport axios from 'axios';\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n} from '../constants/actions';\nimport { API_BASE_URL } from '../constants/url';\nimport { useHistory } from 'react-router-dom'; // Importer useHistory depuis react-router-dom\n\nconst baseUrl = API_BASE_URL;\n\n// Action de connexion\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${baseUrl}user/login`,\n      { email, password },\n      config\n    );\n\n    dispatch(loginSuccess(data));\n    dispatch(userProfile(data.body.token));\n  } catch (error) {\n    console.log('Error in login:', error);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action de succès de connexion\nexport const loginSuccess = (data) => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data,\n});\n\n// Action de déconnexion\nexport const logout = () => async (dispatch) => {\n  dispatch(userLogout());\n  dispatch(userProfileReset());\n};\n\n// Action de déconnexion de l'utilisateur\nexport const userLogout = () => ({ type: USER_LOGOUT });\n\n// Action de réinitialisation du profil utilisateur\nexport const userProfileReset = () => ({ type: USER_PROFILE_RESET });\n\n// Action de profil utilisateur réussie\nexport const userProfile = (token) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\n      `${baseUrl}user/profile`,\n      { token },\n      getConfig(token)\n    );\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Fonction pour obtenir la configuration avec le token d'authentification\nconst getConfig = (token) => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,EACXC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,QACb,sBAAsB;AAC7B,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;;AAE/C,MAAMC,OAAO,GAAGF,YAAY;;AAE5B;AACA,OAAO,MAAMG,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,GAAGR,OAAO,YAAY,EACtB;MAAEE,KAAK;MAAEC;IAAS,CAAC,EACnBE,MACF,CAAC;IAEDD,QAAQ,CAACK,YAAY,CAACF,IAAI,CAAC,CAAC;IAC5BH,QAAQ,CAACM,WAAW,CAACH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACrCT,QAAQ,CAAC;MACPY,IAAI,EAAEvB,eAAe;MACrBwB,OAAO,EACLJ,KAAK,CAACK,QAAQ,IAAIL,KAAK,CAACK,QAAQ,CAACX,IAAI,CAACY,OAAO,GACzCN,KAAK,CAACK,QAAQ,CAACX,IAAI,CAACY,OAAO,GAC3BN,KAAK,CAACM;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMV,YAAY,GAAIF,IAAI,KAAM;EACrCS,IAAI,EAAExB,kBAAkB;EACxByB,OAAO,EAAEV;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMa,MAAM,GAAGA,CAAA,KAAM,MAAOhB,QAAQ,IAAK;EAC9CA,QAAQ,CAACiB,UAAU,CAAC,CAAC,CAAC;EACtBjB,QAAQ,CAACkB,gBAAgB,CAAC,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMD,UAAU,GAAGA,CAAA,MAAO;EAAEL,IAAI,EAAEtB;AAAY,CAAC,CAAC;;AAEvD;AACA,OAAO,MAAM4B,gBAAgB,GAAGA,CAAA,MAAO;EAAEN,IAAI,EAAEnB;AAAmB,CAAC,CAAC;;AAEpE;AACA,OAAO,MAAMa,WAAW,GAAIE,KAAK,IAAK,MAAOR,QAAQ,IAAK;EACxD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,GAAGR,OAAO,cAAc,EACxB;MAAEY;IAAM,CAAC,EACTW,SAAS,CAACX,KAAK,CACjB,CAAC;IACDR,QAAQ,CAAC;MAAEY,IAAI,EAAErB,oBAAoB;MAAEsB,OAAO,EAAEV;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPY,IAAI,EAAEpB,iBAAiB;MACvBqB,OAAO,EACLJ,KAAK,CAACK,QAAQ,IAAIL,KAAK,CAACK,QAAQ,CAACX,IAAI,CAACY,OAAO,GACzCN,KAAK,CAACK,QAAQ,CAACX,IAAI,CAACY,OAAO,GAC3BN,KAAK,CAACM;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,MAAMI,SAAS,GAAIX,KAAK,KAAM;EAC5BN,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCkB,aAAa,EAAE,UAAUZ,KAAK;EAChC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}