{"ast":null,"code":"// loginReducer\n\nimport { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/actions';\n\n// UserReducer\n\nimport { USER_PROFILE_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_RESET, USER_PROFILE_UPDATE, USER_PROFILE_UPDATE_FAIL } from '../constants/actions';\nimport { API_BASE_URL } from '../constants/url';\nimport axios from 'axios';\nconst baseUrl = API_BASE_URL;\n\n// Login action\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${baseUrl}user/login`, {\n      email,\n      password\n    }, config);\n    dispatch(loginSuccess(data));\n    dispatch(userProfile(data.body.token));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// login success\nexport const loginSuccess = data => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data\n});\n\n// Logout action\n\nexport const logout = () => async dispatch => {\n  const navigte = use;\n  dispatch(userLogout());\n  dispatch(userProfileReset());\n\n  // Supprime les informations d'authentification du stockage local\n  localStorage.removeItem('userToken');\n  sessionStorage.removeItem('userToken');\n\n  // Utilise navigate pour la redirection\n  navigate('/login');\n};\n// User logout\nexport const userLogout = () => ({\n  type: USER_LOGOUT\n});\n\n// User profile reset\nexport const userProfileReset = () => ({\n  type: USER_PROFILE_RESET\n});\n\n// User's profile action\n\nexport const userProfile = token => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(`${baseUrl}user/profile`, {\n      token\n    }, getConfig(token));\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_FAIL, error));\n  }\n};\n\n// User's update profile\n\nexport const updateProfile = (token, newFirstName, newLastName) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.put(`${baseUrl}user/profile`, {\n      firstName: newFirstName,\n      lastName: newLastName\n    }, getConfig(token));\n    dispatch(userProfileUpdate(data));\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_UPDATE_FAIL, error));\n  }\n};\n\n// User profile update\nexport const userProfileUpdate = data => ({\n  type: USER_PROFILE_UPDATE,\n  payload: data\n});\nconst handleError = (type, error) => ({\n  type,\n  payload: error.response && error.response.data.message ? error.response.data.message : error.message\n});\nconst getConfig = token => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`\n  }\n});","map":{"version":3,"names":["USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_PROFILE_UPDATE","USER_PROFILE_UPDATE_FAIL","API_BASE_URL","axios","baseUrl","login","email","password","dispatch","config","headers","data","post","loginSuccess","userProfile","body","token","error","type","payload","response","message","logout","navigte","use","userLogout","userProfileReset","localStorage","removeItem","sessionStorage","navigate","getConfig","handleError","updateProfile","newFirstName","newLastName","put","firstName","lastName","userProfileUpdate","Authorization"],"sources":["/home/utilisateur/Bureau/ArgentBank-website/front-end/src/actions/actions.js"],"sourcesContent":["// loginReducer\n\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n} from '../constants/actions'\n\n// UserReducer\n\nimport {\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n  USER_PROFILE_UPDATE,\n  USER_PROFILE_UPDATE_FAIL,\n} from '../constants/actions'\n\nimport {\n  API_BASE_URL,\n} from '../constants/url';\n\nimport axios from 'axios'\n\nconst baseUrl = API_BASE_URL;\n\n// Login action\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      `${baseUrl}user/login`,\n      { email, password },\n      config\n    )\n\n    dispatch(loginSuccess(data))\n    dispatch(userProfile(data.body.token))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// login success\nexport const loginSuccess = (data) => ({\n  type: USER_LOGIN_SUCCESS,\n  payload: data\n})\n\n// Logout action\n\nexport const logout = () => async (dispatch) => {\nconst navigte = use\n  dispatch(userLogout());\n  dispatch(userProfileReset());\n  \n  // Supprime les informations d'authentification du stockage local\n  localStorage.removeItem('userToken');\n  sessionStorage.removeItem('userToken');\n  \n  // Utilise navigate pour la redirection\n  navigate('/login');\n};\n// User logout\nexport const userLogout = () => ({ type: USER_LOGOUT })\n\n// User profile reset\nexport const userProfileReset = () => ({ type: USER_PROFILE_RESET })\n\n\n// User's profile action\n\nexport const userProfile = (token) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(`${baseUrl}user/profile`, { token }, getConfig(token));\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_FAIL, error));\n  }\n};\n\n// User's update profile\n\nexport const updateProfile = (token, newFirstName, newLastName) => async (dispatch) => {\n  try {\n    const { data } = await axios.put(`${baseUrl}user/profile`, { firstName: newFirstName, lastName: newLastName }, getConfig(token));\n    dispatch(userProfileUpdate(data));\n  } catch (error) {\n    dispatch(handleError(USER_PROFILE_UPDATE_FAIL, error));\n  }\n};\n\n// User profile update\nexport const userProfileUpdate = (data) => ({\n  type: USER_PROFILE_UPDATE,\n  payload: data\n})\n\nconst handleError = (type, error) => ({\n  type,\n  payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n});\n\nconst getConfig = (token) => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}