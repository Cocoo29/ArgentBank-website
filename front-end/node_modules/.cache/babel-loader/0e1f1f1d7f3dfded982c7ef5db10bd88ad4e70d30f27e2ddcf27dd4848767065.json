{"ast":null,"code":"import{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{updateProfile}from'../../actions/actions';import'./header.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserHeader(){const dispatch=useDispatch();// Extrait les valeurs du profil et du jeton du magasin Redux\nconst{firstName,lastName}=useSelector(state=>state.userProfile);const{token}=useSelector(state=>state.userLogin);// Déclare les états locaux pour les nouveaux prénom et nom\nconst[newFirstname,setNewFirstname]=useState(firstName);const[newLastname,setNewLastname]=useState(lastName);// Déclare l'état local pour le mode d'édition\nconst[editButton,setEditButton]=useState(false);// Gestionnaire de clic sur le bouton \"Edit Name\"\nconst editNameButton=e=>{e.preventDefault();setEditButton(true);};// Gestionnaire de soumission du formulaire\nconst submitHandler=async e=>{e.preventDefault();try{// Dispatch de l'action pour mettre à jour le profil avec les nouvelles valeurs\nawait dispatch(updateProfile(token,newFirstname,newLastname));// Mise à jour du pseudo dans le localStorage\nlocalStorage.setItem('userPseudo',\"\".concat(newFirstname,\" \").concat(newLastname));// Si la mise à jour réussit, désactiver le mode d'édition\nsetEditButton(false);}catch(error){console.error(\"Error updating profile:\",error);// Gérer les erreurs de mise à jour du profil ici\n}};// Effet pour récupérer le pseudo sauvegardé dans le localStorage lors du chargement initial\nuseEffect(()=>{const storedPseudo=localStorage.getItem('userPseudo');if(storedPseudo){const[storedFirstname,storedLastname]=storedPseudo.split(' ');setNewFirstname(storedFirstname);setNewLastname(storedLastname);}},[]);// Défini le message de bienvenue en fonction des nouveaux noms (s'ils ont été modifiés) ou des noms existants\nconst welcomeMessage=editButton?\"Welcome back\":\"Welcome back \".concat(newFirstname,\" \").concat(newLastname,\"!\");// Si le mode d'édition est désactivé, afficher le nom et le prénom actuels\nif(!editButton){return/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:welcomeMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:editNameButton,className:\"edit-button\",children:\"Edit Name\"})]});}else{// Si le mode d'édition est activé, afficher le formulaire d'édition\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:welcomeMessage}),/*#__PURE__*/_jsxs(\"form\",{className:\"editNameContent\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editNameInputs\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"newFirstname\",value:newFirstname,onChange:e=>setNewFirstname(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"newLastname\",value:newLastname,onChange:e=>setNewLastname(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editNameButtons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",type:\"submit\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:()=>setEditButton(false),children:\"Cancel\"})]})]})]});}}export default UserHeader;","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","updateProfile","jsx","_jsx","jsxs","_jsxs","UserHeader","dispatch","firstName","lastName","state","userProfile","token","userLogin","newFirstname","setNewFirstname","newLastname","setNewLastname","editButton","setEditButton","editNameButton","e","preventDefault","submitHandler","localStorage","setItem","concat","error","console","storedPseudo","getItem","storedFirstname","storedLastname","split","welcomeMessage","className","children","onClick","onSubmit","type","id","value","onChange","target","required"],"sources":["/home/utilisateur/Bureau/ArgentBank-website/front-end/src/components/UserHeader/header.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateProfile } from '../../actions/actions';\nimport './header.css';\n\nfunction UserHeader() {\n  const dispatch = useDispatch();\n\n  // Extrait les valeurs du profil et du jeton du magasin Redux\n  const { firstName, lastName } = useSelector((state) => state.userProfile);\n  const { token } = useSelector((state) => state.userLogin);\n\n  // Déclare les états locaux pour les nouveaux prénom et nom\n  const [newFirstname, setNewFirstname] = useState(firstName);\n  const [newLastname, setNewLastname] = useState(lastName);\n\n  // Déclare l'état local pour le mode d'édition\n  const [editButton, setEditButton] = useState(false);\n\n  // Gestionnaire de clic sur le bouton \"Edit Name\"\n  const editNameButton = (e) => {\n    e.preventDefault();\n    setEditButton(true);\n  };\n\n  // Gestionnaire de soumission du formulaire\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      // Dispatch de l'action pour mettre à jour le profil avec les nouvelles valeurs\n      await dispatch(updateProfile(token, newFirstname, newLastname));\n\n      // Mise à jour du pseudo dans le localStorage\n      localStorage.setItem('userPseudo', `${newFirstname} ${newLastname}`);\n\n      // Si la mise à jour réussit, désactiver le mode d'édition\n      setEditButton(false);\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      // Gérer les erreurs de mise à jour du profil ici\n    }\n  };\n\n  // Effet pour récupérer le pseudo sauvegardé dans le localStorage lors du chargement initial\n  useEffect(() => {\n    const storedPseudo = localStorage.getItem('userPseudo');\n    if (storedPseudo) {\n      const [storedFirstname, storedLastname] = storedPseudo.split(' ');\n      setNewFirstname(storedFirstname);\n      setNewLastname(storedLastname);\n    }\n  }, []);\n\n  // Défini le message de bienvenue en fonction des nouveaux noms (s'ils ont été modifiés) ou des noms existants\n  const welcomeMessage = editButton ? `Welcome back` : `Welcome back ${newFirstname} ${newLastname}!`;\n\n  // Si le mode d'édition est désactivé, afficher le nom et le prénom actuels\n  if (!editButton) {\n    return (\n      <div className=\"header\">\n        <h1>{welcomeMessage}</h1>\n        <button onClick={editNameButton} className=\"edit-button\">\n          Edit Name\n        </button>\n      </div>\n    );\n  } else {\n    // Si le mode d'édition est activé, afficher le formulaire d'édition\n    return (\n      <div className=\"header\">\n        <h1>{welcomeMessage}</h1>\n        <form className=\"editNameContent\" onSubmit={submitHandler}>\n          <div className=\"editNameInputs\">\n            <input\n              type=\"text\"\n              id=\"newFirstname\"\n              value={newFirstname}\n              onChange={(e) => setNewFirstname(e.target.value)}\n              required\n            />\n            <input\n              type=\"text\"\n              id=\"newLastname\"\n              value={newLastname}\n              onChange={(e) => setNewLastname(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"editNameButtons\">\n            <button className=\"save-button\" type=\"submit\">\n              Save\n            </button>\n            <button className=\"cancel-button\" onClick={() => setEditButton(false)}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UserHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}